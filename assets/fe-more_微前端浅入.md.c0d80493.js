import{_ as l,c as e,o as a,a as s}from"./app.ee7dae8a.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"浅入微前端--- Webpack Module Federation Demo 实践","slug":"浅入微前端-webpack-module-federation-demo-实践","link":"#浅入微前端-webpack-module-federation-demo-实践","children":[]},{"level":3,"title":"Webpack Module Federation Demo 实践","slug":"webpack-module-federation-demo-实践","link":"#webpack-module-federation-demo-实践","children":[]},{"level":3,"title":"更多","slug":"更多","link":"#更多","children":[]}],"relativePath":"fe-more/微前端浅入.md"}'),n={name:"fe-more/微前端浅入.md"},p=s(`<h3 id="浅入微前端-webpack-module-federation-demo-实践" tabindex="-1">浅入微前端--- Webpack Module Federation Demo 实践 <a class="header-anchor" href="#浅入微前端-webpack-module-federation-demo-实践" aria-hidden="true">#</a></h3><blockquote><p>Demo 实践地址：<a href="https://github.com/huwuji/blog/tree/master/Demo/micro-fe" target="_blank" rel="noreferrer">https://github.com/huwuji/blog/tree/master/Demo/micro-fe</a></p></blockquote><h4 id="微前端理念" tabindex="-1">微前端理念 <a class="header-anchor" href="#微前端理念" aria-hidden="true">#</a></h4><ul><li><p>什么是微前端？ 借鉴于微服务的理念，一个前端应用由多个微前端应用组合而成的技术架构；</p></li><li><p>微前端的解决的问题？</p><ul><li>巨石应用维护问题</li><li>业务页面/组件复用问题</li><li>业务快速迭代，兼容新老子业务问题</li><li>提升构建和交互效率：子应用单独开发，测试，构建部署交付；</li><li>架构渐进升级</li><li>...</li></ul></li><li><p>微前端特点</p><ul><li>独立与自治：简化开发</li><li>技术栈无关：技术栈与架构可平滑升级</li><li>运行时集成：动态化，依赖控制</li><li>解偶与组合：增量更新，集合交付</li><li>以及去中心化</li></ul></li><li><p>微前端的价值</p><ul><li><p>工程角度上：</p><ul><li>独立开发，构建，提升构建效率，独立部署交付；</li><li>架构支持平滑升级</li></ul></li><li><p>业务角度上：</p><ul><li>业务的颗粒化</li><li>产品动态化</li><li>团队自治</li></ul></li></ul></li><li><p>微前端技术上需要处理点？</p><ul><li><p>集成方式</p><ul><li>iframe</li><li>nginx 路由分发，只适合页面为单元</li><li>Javascript 集成，使用 script 标签加载并执行脚本，赋值一个全局函数，并依据需要（何时，何地）渲染执行；</li><li>Web Components 集成</li></ul></li><li><p>共享组件库：对于公共库的管理</p><ul><li>共享组件库的引入方式： 1）npm 包：还需要打包编译，不能运行时直接加载 2）CDN 资源包：可以运行时加载。注意资源版本；</li><li>共享组件库的提供方式： 1）单独管理：使用 monorepo 管理一系列包；但细分到组件，需提前规划共享组件，每次业务开发公共组件都要到 monorepo 工程中开发； 2）使用 Webpack Federation，把业务开发应用(或者说各个微应用)exposes 的组件单打打包，推动到 CDN；同时也能把组件或者应用共同依赖的公共资源(shared 资源)单独拎出来；</li></ul></li><li><p>运行环境安全 主要 js 安全隔离，防止上下文的一些全局属性被污染</p></li><li><p>跨应用通信</p><ul><li>基于 URL 通信</li><li>发布订阅模型</li><li>...</li></ul></li><li><p>样式隔离</p><ul><li>工程化手段：css module，css in js，无法杜绝项目中使用全局样式，可能需要我们约定只能在主应用中修改全局组件样式</li><li>shadow DOM，天然的样式隔离</li><li>在运行时或打包编译时增加命名空间，利用属性选择器区分（如 BEM）</li></ul></li><li><p>测试，部署独立</p></li></ul></li><li><p>微前端架构模式下，子应用打包的方式，基本分为两种：</p><ul><li>构建时组合：Module Federation, EMP ...</li><li>运行时组合：qiankun ...</li></ul></li><li><p>微前端现有的落地方案可以分为三类： 自组织模式、基座容器模式以及模块加载模式。</p></li></ul><h4 id="国内目前微前端框架" tabindex="-1">国内目前微前端框架 <a class="header-anchor" href="#国内目前微前端框架" aria-hidden="true">#</a></h4><ul><li>qiankun: <a href="https://github.com/umijs/qiankun" target="_blank" rel="noreferrer">https://github.com/umijs/qiankun</a></li><li>EMP: <a href="https://github.com/efoxTeam/emp" target="_blank" rel="noreferrer">https://github.com/efoxTeam/emp</a></li><li>fronts: <a href="https://github.com/unadlib/fronts" target="_blank" rel="noreferrer">https://github.com/unadlib/fronts</a></li></ul><h3 id="webpack-module-federation-demo-实践" tabindex="-1">Webpack Module Federation Demo 实践 <a class="header-anchor" href="#webpack-module-federation-demo-实践" aria-hidden="true">#</a></h3><p>我们理解：Webpack Module Federation 致力于构建独立的应用及模块，方便应用之间，模块之间的组合；参照于微前端理念。</p><p>前端一般实现模块共享的方式：</p><ul><li><p>npm ：利用 npm 包实现模块的共享 但是也需要在本地编译；</p></li><li><p>通过直接引用 UMD 包 通常这样的包文件会包含很多重复依赖，引用的基础库也容易产生冲突；</p></li></ul><p>接下来我们窥探下 webpack5 module federation 的实现组件共享的方式</p><p>webpack5 module federation 的打包方式： 利用 ModuleFederationPlugin 插件允许构建在运行时提供或使用具有其他独立构建的模块。</p><p>插件的几个重要参数：</p><ul><li>name 当前应用名称，需要全局唯一。</li><li>remotes 可以将其他项目的 name 映射到当前项目中。</li><li>exposes 表示导出的模块，只有在此申明的模块才可以作为远程依赖被使用。</li><li>shared 是非常重要的参数，制定了这个参数，可以让远程加载的模块对应依赖 优先用 Host 的依赖，如果 Host 没有，再用自己的；改为使用本地项目的 React 或 ReactDOM 或 Vue。</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const HtmlWebpackPlugin = require(&quot;html-webpack-plugin&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">const ModuleFederationPlugin = require(&quot;webpack/lib/container/ModuleFederationPlugin&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">module.exports = {</span></span>
<span class="line"><span style="color:#A6ACCD;">  // other webpack configs...</span></span>
<span class="line"><span style="color:#A6ACCD;">  plugins: [</span></span>
<span class="line"><span style="color:#A6ACCD;">    new ModuleFederationPlugin({</span></span>
<span class="line"><span style="color:#A6ACCD;">      name: &quot;app3&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">      library: { type: &#39;var&#39;, name: &#39;app3&#39; },</span></span>
<span class="line"><span style="color:#A6ACCD;">      // 依赖的组件</span></span>
<span class="line"><span style="color:#A6ACCD;">      remotes: {</span></span>
<span class="line"><span style="color:#A6ACCD;">        app1: &quot;app1@http://localhost:3001/remoteEntry.js&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">        app2: &quot;app2@http://localhost:3002/remoteEntry.js&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">      },</span></span>
<span class="line"><span style="color:#A6ACCD;">      // 暴露出去的模块</span></span>
<span class="line"><span style="color:#A6ACCD;">      exposes: {</span></span>
<span class="line"><span style="color:#A6ACCD;">        AppContainer: &quot;./src/App&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">        &#39;Button&#39;:&#39;./src/Button&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">      },</span></span>
<span class="line"><span style="color:#A6ACCD;">      // 避免项目出现多个公共依赖，一定要提供方和使用方项目同时配置shared</span></span>
<span class="line"><span style="color:#A6ACCD;">      shared: [</span></span>
<span class="line"><span style="color:#A6ACCD;">            &quot;react-dom&quot;:&#39;^16.14.0&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">            &quot;react-router-dom&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">            &quot;react&quot;: {</span></span>
<span class="line"><span style="color:#A6ACCD;">                requiredVersion: &#39;^16.14.0&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">                singleton: true,</span></span>
<span class="line"><span style="color:#A6ACCD;">            },</span></span>
<span class="line"><span style="color:#A6ACCD;">        ]</span></span>
<span class="line"><span style="color:#A6ACCD;">    }),</span></span>
<span class="line"><span style="color:#A6ACCD;">    new HtmlWebpackPlugin({</span></span>
<span class="line"><span style="color:#A6ACCD;">      template: &quot;./public/index.html&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">      chunks: [&quot;main&quot;]</span></span>
<span class="line"><span style="color:#A6ACCD;">    })</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h4 id="项目具体介绍" tabindex="-1">项目具体介绍： <a class="header-anchor" href="#项目具体介绍" aria-hidden="true">#</a></h4><ol><li><p>项目介绍 注意： 1）这里使用 lerna 来模拟管理多应用，实际项目中这么很可能是分开在不同工程； 2）这么只是模拟了单项的依赖，双向依赖类似； 3）开启了并发模式渲染，依赖于此配置搭建应用要注意自动批处理；如果想取消自动批处理，想某些事件同步执行，请使用 flushSync；</p><ul><li><p>app_a 提供远程模块；</p></li><li><p>app_b 构建项目并依赖 app_a 提供的远程模块；</p></li></ul></li><li><p>构建 Demo</p><ul><li>全局安装 lerna，并构建 npm install lerna -g lerna init ...</li></ul></li><li><p>项目运行</p><ul><li>先运行构建 lerna run build</li><li>再启动服务器 lerna run start</li></ul></li><li><p>其他说明：</p><p>1） 需要注意这么抽离了一个 bootsrap.js 文件，并对此文件单独打包输出一个 bundle 文件，被浏览器 request;</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">module: {</span></span>
<span class="line"><span style="color:#A6ACCD;">    rules: [</span></span>
<span class="line"><span style="color:#A6ACCD;">    {</span></span>
<span class="line"><span style="color:#A6ACCD;">        test: /bootstrap\\.js$/,</span></span>
<span class="line"><span style="color:#A6ACCD;">        loader: &quot;bundle-loader&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">        options: {</span></span>
<span class="line"><span style="color:#A6ACCD;">        lazy: true,</span></span>
<span class="line"><span style="color:#A6ACCD;">        },</span></span>
<span class="line"><span style="color:#A6ACCD;">    },</span></span>
<span class="line"><span style="color:#A6ACCD;">    ],</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div></li></ol><h3 id="更多" tabindex="-1">更多 <a class="header-anchor" href="#更多" aria-hidden="true">#</a></h3><blockquote><p><a href="https://webpack.docschina.org/concepts/module-federation/#concept-goals" target="_blank" rel="noreferrer">https://webpack.docschina.org/concepts/module-federation/#concept-goals</a> &gt;</p></blockquote><blockquote><p><a href="https://webpack.js.org/plugins/module-federation-plugin" target="_blank" rel="noreferrer">https://webpack.js.org/plugins/module-federation-plugin</a></p></blockquote><blockquote><p><a href="https://github.com/module-federation/module-federation-examples" target="_blank" rel="noreferrer">https://github.com/module-federation/module-federation-examples</a></p></blockquote><blockquote><p><a href="https://www.bilibili.com/video/BV1z5411K7us" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1z5411K7us</a></p></blockquote><blockquote><p><a href="https://www.lumin.tech/articles/webpack-module-federation/" target="_blank" rel="noreferrer">https://www.lumin.tech/articles/webpack-module-federation/</a></p></blockquote>`,23),o=[p];function i(t,r,c,u,d,h){return a(),e("div",null,o)}const A=l(n,[["render",i]]);export{m as __pageData,A as default};
